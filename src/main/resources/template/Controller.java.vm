package ${packagePath}.${moduleName}.controller;

import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.core.metadata.IPage;
import ${packagePath}.${moduleName}.domain.${tableInfo.upperClassName};
import ${packagePath}.${moduleName}.service.${tableInfo.upperClassName}Service;
#if(${ctrlResultConfig.exist})
import ${ctrlResultConfig.packageRelativePath}
#else
import java.util.HashMap;
import java.util.Map;
#end
#if(${usualFrameConfig.useShiro})
import org.apache.shiro.authz.annotation.RequiresPermissions;
#end

/**
 * @author ${author}
 * @since ${datetime}
 */
@RestController
@RequestMapping("${moduleName}")
#if(${usualFrameConfig.useSwagger})
@Api(description = "WEB端-$!{tableInfo.comments}")
#end
public class ${tableInfo.upperClassName}Controller {

    @Autowired
    private ${tableInfo.upperClassName}Service ${tableInfo.lowerClassName}Service;

    @GetMapping("/${tableInfo.pathName}")
#if(${usualFrameConfig.useShiro})
    @RequiresPermissions("${moduleName}:${tableInfo.pathName}:read")
#end
#if(${usualFrameConfig.useSwagger})
    @ApiOperation(value = "获取$!{tableInfo.comments}分页列表", response = ${tableInfo.upperClassName}.class)
#end
    public ${ctrlResultConfig.className} list(@RequestParam(defaultValue = "1") Long current,
                                              @RequestParam(defaultValue = "10") Long size,${tableInfo.upperClassName} ${tableInfo.lowerClassName}) {
        IPage<${tableInfo.upperClassName}> page = ${tableInfo.lowerClassName}Service.page(new Page<>(current,size), new QueryWrapper<>(${tableInfo.lowerClassName}));
#if(${ctrlResultConfig.exist})
        return ${ctrlResultConfig.getInstance}(page);
#else
        Map<String,Object> result = new HashMap<String,Object>(1<<3,1){{
            put("code",200);
            put("data",page);
            put("msg","请求成功");
        }};
        return result;
#end
    }

    @GetMapping("/${tableInfo.pathName}")
#if(${usualFrameConfig.useShiro})
    @RequiresPermissions("${moduleName}:${tableInfo.pathName}:read")
#end
#if(${usualFrameConfig.useSwagger})
    @ApiOperation(value = "获取$!{tableInfo.comments}信息详情", response = ${tableInfo.upperClassName}.class)
#end
    public ${ctrlResultConfig.className} info(@RequestParam ${tableInfo.pk.attrType} ${tableInfo.pk.lowerAttrName}) {
#if(${ctrlResultConfig.exist})
        return ${ctrlResultConfig.getInstance}(${tableInfo.lowerClassName}Service.getById(${tableInfo.pk.lowerAttrName}));
#else
        Map<String,Object> result = new HashMap<String,Object>(1<<3,1){{
            put("code",200);
            put("data",${tableInfo.lowerClassName}Service.getById(${tableInfo.pk.lowerAttrName}));
            put("msg","请求成功");
        }};
        return result;
#end
    }

    @PostMapping("/${tableInfo.pathName}")
#if(${usualFrameConfig.useShiro})
    @RequiresPermissions("${moduleName}:${tableInfo.pathName}:create")
#end
#if(${usualFrameConfig.useSwagger})
    @ApiOperation(value = "保存$!{tableInfo.comments}信息")
#end
    public ${ctrlResultConfig.className} save(@RequestBody ${tableInfo.upperClassName} ${tableInfo.lowerClassName}) {
#if(${ctrlResultConfig.exist})
        return ${ctrlResultConfig.getInstance}(${tableInfo.lowerClassName}Service.save(${tableInfo.lowerClassName}));
#else
        Map<String,Object> result = new HashMap<String,Object>(1<<3,1){{
            put("code",200);
            put("data",${tableInfo.lowerClassName}Service.save(${tableInfo.lowerClassName}));
            put("msg","请求成功");
        }};
        return result;
#end
    }

    @PutMapping("/${tableInfo.pathName}")
#if(${usualFrameConfig.useShiro})
    @RequiresPermissions("${moduleName}:${tableInfo.pathName}:update")
#end
#if(${usualFrameConfig.useSwagger})
    @ApiOperation(value = "根据id修改$!{tableInfo.comments}信息")
#end
    public ${ctrlResultConfig.className} update(@RequestBody ${tableInfo.upperClassName} ${tableInfo.lowerClassName}) {
#if(${ctrlResultConfig.exist})
        return ${ctrlResultConfig.getInstance}(${tableInfo.lowerClassName}Service.updateById(${tableInfo.lowerClassName}));
#else
        Map<String,Object> result = new HashMap<String,Object>(1<<3,1){{
            put("code",200);
            put("data",${tableInfo.lowerClassName}Service.updateById(${tableInfo.lowerClassName}));
            put("msg","请求成功");
        }};
        return result;
#end
    }

    @DeleteMapping("/${tableInfo.pathName}/{id}")
#if(${usualFrameConfig.useShiro})
    @RequiresPermissions("${moduleName}:${tableInfo.pathName}:delete")
#end
#if(${usualFrameConfig.useSwagger})
    @ApiOperation(value = "删除$!{tableInfo.comments}信息")
#end
    public ${ctrlResultConfig.className} delete(@PathVariable("${tableInfo.pk.lowerAttrName}") ${tableInfo.pk.attrType} ${tableInfo.pk.lowerAttrName}) {
#if(${ctrlResultConfig.exist})
        return ${ctrlResultConfig.getInstance}(${tableInfo.lowerClassName}Service.removeById(${tableInfo.pk.lowerAttrName}));
#else
        Map<String,Object> result = new HashMap<String,Object>(1<<3,1){{
            put("code",200);
            put("data",${tableInfo.lowerClassName}Service.removeById(${tableInfo.pk.lowerAttrName}));
            put("msg","请求成功");
        }};
        return result;
#end
    }

}
